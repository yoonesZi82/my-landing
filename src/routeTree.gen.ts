/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './pages/__root'
import { Route as ProjectsIndexRouteImport } from './pages/projects/index'
import { Route as AboutMeIndexRouteImport } from './pages/about-me/index'
import { Route as HomeIndexRouteImport } from './pages/_home/index'
import { Route as ProjectsIdIndexRouteImport } from './pages/projects/$id/index'

const ProjectsIndexRoute = ProjectsIndexRouteImport.update({
  id: '/projects/',
  path: '/projects/',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutMeIndexRoute = AboutMeIndexRouteImport.update({
  id: '/about-me/',
  path: '/about-me/',
  getParentRoute: () => rootRouteImport,
} as any)
const HomeIndexRoute = HomeIndexRouteImport.update({
  id: '/_home/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProjectsIdIndexRoute = ProjectsIdIndexRouteImport.update({
  id: '/projects/$id/',
  path: '/projects/$id/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof HomeIndexRoute
  '/about-me': typeof AboutMeIndexRoute
  '/projects': typeof ProjectsIndexRoute
  '/projects/$id': typeof ProjectsIdIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof HomeIndexRoute
  '/about-me': typeof AboutMeIndexRoute
  '/projects': typeof ProjectsIndexRoute
  '/projects/$id': typeof ProjectsIdIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_home/': typeof HomeIndexRoute
  '/about-me/': typeof AboutMeIndexRoute
  '/projects/': typeof ProjectsIndexRoute
  '/projects/$id/': typeof ProjectsIdIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/about-me' | '/projects' | '/projects/$id'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/about-me' | '/projects' | '/projects/$id'
  id: '__root__' | '/_home/' | '/about-me/' | '/projects/' | '/projects/$id/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  HomeIndexRoute: typeof HomeIndexRoute
  AboutMeIndexRoute: typeof AboutMeIndexRoute
  ProjectsIndexRoute: typeof ProjectsIndexRoute
  ProjectsIdIndexRoute: typeof ProjectsIdIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/projects/': {
      id: '/projects/'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof ProjectsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about-me/': {
      id: '/about-me/'
      path: '/about-me'
      fullPath: '/about-me'
      preLoaderRoute: typeof AboutMeIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_home/': {
      id: '/_home/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof HomeIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/projects/$id/': {
      id: '/projects/$id/'
      path: '/projects/$id'
      fullPath: '/projects/$id'
      preLoaderRoute: typeof ProjectsIdIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  HomeIndexRoute: HomeIndexRoute,
  AboutMeIndexRoute: AboutMeIndexRoute,
  ProjectsIndexRoute: ProjectsIndexRoute,
  ProjectsIdIndexRoute: ProjectsIdIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
